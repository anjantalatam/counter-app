{"version":3,"sources":["components/counter.jsx","components/counters.jsx","components/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","className","this","getBadgeClass","formatCount","onClick","props","onIncrement","counter","onDecrement","disabled","value","onDelete","classBadge","Component","Counters","onReset","counters","map","id","NavBar","href","reduce","totalCounters","App","state","handleIncrement","index","indexOf","setState","handleDecrement","handleReset","a","handleDelete","course","filter","m","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d60de8f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-1\">\n            <span className={this.getBadgeClass()}>{this.formatCount()}</span>\n          </div>\n\n          <div className=\"col\">\n            <button\n              className=\"btn btn-secondary btn-sm\"\n              onClick={() => this.props.onIncrement(this.props.counter)}>\n              +\n            </button>\n            <button\n              className=\"btn btn-secondary btn-sm m-2\"\n              onClick={() => this.props.onDecrement(this.props.counter)}\n              disabled={this.props.counter.value === 0 ? true : false}>\n              -\n            </button>\n            <button\n              className=\"btn btn-danger btn-sm \"\n              onClick={() => this.props.onDelete(this.props.counter)}>\n              X\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getBadgeClass() {\n    let classBadge = \"badge m-2 badge-\";\n    if (this.props.counter.value === 0) return (classBadge += \"warning\");\n    return (classBadge += \"primary\");\n  }\n\n  formatCount() {\n    return this.props.counter.value === 0 ? \"zero\" : this.props.counter.value;\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  render() {\n    return (\n      <div>\n        <button\n          className=\"btn btn-primary btn-sm m-2\"\n          onClick={this.props.onReset}>\n          Reset\n        </button>\n        {this.props.counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            onDelete={this.props.onDelete}\n            onIncrement={this.props.onIncrement}\n            onDecrement={this.props.onDecrement}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n","import React from \"react\";\n// class NavBar extends Component {\n//   render() {\n//\n//   }\n// }\n\nconst NavBar = (props) => {\n  // console.log(props.counters);\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"www.youtube.com\">\n        Navbar{\" \"}\n        <span className=\"badge badge-pill badge-secondary\">\n          {/* there is no this.props in here so we use props as an argument  */}\n          {props.counters.reduce(\n            (totalCounters, counter) => totalCounters + counter.value,\n            0\n          )}\n        </span>\n      </a>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\nimport NavBar from \"./components/navbar\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 1 },\n      { id: 2, value: 4 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counters[index] };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleDecrement = (counter) => {\n    // console.log(\"Decrement Success\");\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value--;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((a) => {\n      a.value = 0;\n      return a;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (course) => {\n    let counters = this.state.counters.filter((m) => m.id !== course.id);\n    this.setState({ counters });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar counters={this.state.counters} />\n        <main className=\"container\">\n          <Counters\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n            onReset={this.handleReset}\n            onDecrement={this.handleDecrement}\n            counters={this.state.counters}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}